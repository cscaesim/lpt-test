<head>
    <title> BLOB Graph </title>
    <!-- <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script> -->
</head>

<body>
    <h1>Trace Measurement Graph</h1>
    <div class="container" style=" position: relative; width:1500; height:100;">
        <canvas id="chart" ></canvas>
    </div>
</body>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.3.0/chart.min.js"
    integrity="sha512-yadYcDSJyQExcKhjKSQOkBKy2BLDoW6WnnGXCAkCoRlpHGpYuVuBqGObf3g/TdB86sSbss1AOP4YlGSb6EKQPg=="
    crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script type="text/javascript">

    // Constants:
    let refresh_time = 1000;

    // google.charts.load('current', {'packages':['corechart']});
    // google.charts.setOnLoadCallback(drawChart);
    var graph_data = '<%= data %>';
    var time_data = '<%= time_data %>';

    // console.log('Time data', time_data);


    var array_object = JSON.parse(graph_data);

    var time_data = convertToTimeArray(time_data);
    // var time_object = JSON.parse(time_data);
    console.log("time object", time_data);
    // console.log("convert from json test", test[0]);


    console.log('data', graph_data);

    window.onload = function ()
    {
        var chart = document.getElementById('chart').getContext('2d');
        chart.height = 200;
        // Track which trace we're on for displaying
        let trace_number = 0;
        console.log("data set test :", array_object[0]);
        // generate_graph(trace_number);

        // Our repeating interval to generate graphs over and over
        setInterval(function ()
        {
            console.log("Displaying trace: ", trace_number)
            generate_graph(trace_number)
            if (trace_number < 49)
            {
                trace_number++;
            } else
            {
                trace_number = 0;
            }
        }, refresh_time);
    }

    // Generates our graph, using GraphJS
    // Takes in a set of values
    function generate_graph(trace)
    {

        let data = array_object[trace];
        let time = time_data[trace];

        // let current_time = times[trace];
        console.log("data test", array_object[0]);

        if (window.newChart != null) {
            window.newChart.destroy();
        }

        
        // Create our list of x-axis for graph compatibility
        // I think Chartjs 
        let x_axis = create_labels_set(data)
        console.log("trace test : ", trace)
        console.log("time test", time)
        window.newChart = new Chart(chart, {
            type: 'line',
            data: {
                labels: x_axis,
                datasets: [{
                    label: `${time}`,
                    data: data,
                    fill: false,
                    borderColor: 'rgb(175, 92, 192)',
                    borderWidth: 1
                }]
            },

            options: {
                scaleBeginAtZero: true,
                responsive: true,
                maintainApectRatio: false,
                spanGaps: true,
                scales: {
                    y: {
                        min: -25,
                        max: 25,
                        ticks: {
                            min: -15,
                            stepSize: 2
                        }
                    },
                    x: {
                        suggestedMin: 0,
                        max: 900,
                        ticks: {
                            min: 5,
                            stepSize: 10
                        }
                    }
                }
            }
        });
    }

    // MARK:- Create Labels for graph
    // Because the graphs need labels to create the functions, I'm going to
    // Create a list of empty labels for the x axis
    // Filling it with actual values isn't too bad either, but no values is a bit cleaner.
    function create_labels_set(graph_data)
    {
        let array_length = 900
        let array = []
        let count = 1;

        while (count < (array_length))
        {
            array.push('')
            count++;
        }

        return array;
    }

// MARK:- Create time array for displaying the trace time
function convertToTimeArray(string) {
    var stringArray = string.split(',');

    return stringArray;
}

</script>